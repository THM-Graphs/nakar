openapi: 3.0.0
paths:
  /scenarios:
    get:
      operationId: ScenariosController_getAllScenarios
      parameters: []
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioDto'
      tags:
        - Scenarios
  /scenarios/{slug}:
    get:
      operationId: ScenariosController_getScenario
      parameters:
        - name: slug
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioDto'
      tags:
        - Scenarios
  /scenarios/{slug}/graph:
    get:
      operationId: ScenariosController_getScenarioResult
      parameters:
        - name: slug
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDto'
      tags:
        - Scenarios
info:
  title: NAKAR Server
  description: >-
    This server translates various graph databases and scenarios into a simple
    graph-structure to be consumed by nakar clients.
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3000
    description: Default Server
components:
  schemas:
    ScenarioDto:
      type: object
      properties:
        slug:
          type: string
        title:
          type: string
      required:
        - slug
        - title
    PropertyDto:
      type: object
      properties:
        slug:
          type: string
        value:
          type: string
      required:
        - slug
        - value
    NodeDto:
      type: object
      properties:
        id:
          type: string
        displayTitle:
          type: string
        type:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyDto'
      required:
        - id
        - displayTitle
        - type
        - properties
    EdgeDto:
      type: object
      properties:
        id:
          type: string
        startNodeId:
          type: string
        endNodeId:
          type: string
        type:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyDto'
      required:
        - id
        - startNodeId
        - endNodeId
        - type
        - properties
    GraphDto:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/NodeDto'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/EdgeDto'
      required:
        - nodes
        - edges
